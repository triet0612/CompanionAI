basePath: /api/v1
definitions:
  model.APIError:
    properties:
      error_code:
        type: string
      message:
        type: string
    type: object
  model.QA:
    properties:
      answer:
        type: string
      extension:
        type: string
      qa_id:
        type: string
      question:
        type: string
    type: object
  model.Story:
    properties:
      content:
        items:
          $ref: '#/definitions/model.QA'
        type: array
      creation_date:
        type: string
      story_context:
        items:
          type: integer
        type: array
      story_id:
        type: string
      user_id:
        type: string
    type: object
  v1.login.body:
    properties:
      email:
        example: abc@gmail.com
        type: string
      password:
        example: refo
        type: string
    type: object
  v1.register.body:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
  title: API Documentation
  version: "1.0"
paths:
  /login:
    post:
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/v1.login.body'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.APIError'
      summary: get jwt, return in header and cookie
      tags:
      - Authentication
  /qa/image/{id}:
    get:
      parameters:
      - description: qa_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Story'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.APIError'
      summary: get qa image
      tags:
      - Story
  /register:
    post:
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/v1.register.body'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.APIError'
      summary: create new account, login after success
      tags:
      - Authentication
  /story:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Story'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.APIError'
      summary: get story list
      tags:
      - Story
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Story'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.APIError'
      summary: create new story
      tags:
      - Story
  /story/{story_id}:
    delete:
      parameters:
      - description: story id
        example: 51eecb74-bd12-40b4-bd3d-71eaa2a7d71b
        in: path
        name: story_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.APIError'
      summary: delete story by story_id
      tags:
      - Story
    get:
      parameters:
      - description: story id
        example: 51eecb74-bd12-40b4-bd3d-71eaa2a7d71b
        in: path
        name: story_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Story'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.APIError'
      summary: get story detail
      tags:
      - Story
    post:
      parameters:
      - description: story_id
        example: 51eecb74-bd12-40b4-bd3d-71eaa2a7d71b
        in: path
        name: story_id
        required: true
        type: string
      - description: question
        example: What is a dog?
        in: formData
        name: question
        required: true
        type: string
      - description: file
        in: formData
        name: attachment
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.QA'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.APIError'
      summary: get QA in a story
      tags:
      - Story
swagger: "2.0"
